# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.html2pdf_extrafiles import Html2pdfExtrafiles  # noqa: F401,E501
from swagger_server import util


class Body(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, basedocument: str=None, extrafiles: List[Html2pdfExtrafiles]=None):  # noqa: E501
        """Body - a model defined in Swagger

        :param basedocument: The basedocument of this Body.  # noqa: E501
        :type basedocument: str
        :param extrafiles: The extrafiles of this Body.  # noqa: E501
        :type extrafiles: List[Html2pdfExtrafiles]
        """
        self.swagger_types = {
            'basedocument': str,
            'extrafiles': List[Html2pdfExtrafiles]
        }

        self.attribute_map = {
            'basedocument': 'basedocument',
            'extrafiles': 'extrafiles'
        }
        self._basedocument = basedocument
        self._extrafiles = extrafiles

    @classmethod
    def from_dict(cls, dikt) -> 'Body':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The body of this Body.  # noqa: E501
        :rtype: Body
        """
        return util.deserialize_model(dikt, cls)

    @property
    def basedocument(self) -> str:
        """Gets the basedocument of this Body.


        :return: The basedocument of this Body.
        :rtype: str
        """
        return self._basedocument

    @basedocument.setter
    def basedocument(self, basedocument: str):
        """Sets the basedocument of this Body.


        :param basedocument: The basedocument of this Body.
        :type basedocument: str
        """
        if basedocument is None:
            raise ValueError("Invalid value for `basedocument`, must not be `None`")  # noqa: E501

        self._basedocument = basedocument

    @property
    def extrafiles(self) -> List[Html2pdfExtrafiles]:
        """Gets the extrafiles of this Body.


        :return: The extrafiles of this Body.
        :rtype: List[Html2pdfExtrafiles]
        """
        return self._extrafiles

    @extrafiles.setter
    def extrafiles(self, extrafiles: List[Html2pdfExtrafiles]):
        """Sets the extrafiles of this Body.


        :param extrafiles: The extrafiles of this Body.
        :type extrafiles: List[Html2pdfExtrafiles]
        """

        self._extrafiles = extrafiles
